#include <iostream>
#include <cstring>
#include <winsock2.h>
#include <ws2tcpip.h>
#pragma comment(lib, "ws2_32.lib")
#define PORT 8080
using namespace std;

int main() {
    WSADATA wsaData;
    SOCKET sock = 0;
    struct sockaddr_in serv_addr;
    char buffer[1024] = { 0 };

    if (WSAStartup(MAKEWORD(2, 2), &wsaData) != 0) {
        cout << "\nWSAStartup failed\n";
        return -1;
    }

    if ((sock = socket(AF_INET, SOCK_STREAM, 0)) == INVALID_SOCKET) {
        cout << "\nSocket creation error\n";
        WSACleanup();
        return -1;
    }

    serv_addr.sin_family = AF_INET;
    serv_addr.sin_port = htons(PORT);

    if (inet_pton(AF_INET, "127.0.0.1", &serv_addr.sin_addr) <= 0) {
        cout << "\nInvalid address/ Address not supported \n";
        closesocket(sock);
        WSACleanup();
        return -1;
    }
    if (connect(sock, (struct sockaddr*)&serv_addr, sizeof(serv_addr)) < 0) {
        cout << "\nConnection Failed \n";
        closesocket(sock);
        WSACleanup();
        return -1;
    }

    while (true) {
        cout << "Enter message: ";
        cin.getline(buffer, sizeof(buffer));
        send(sock, buffer, strlen(buffer), 0);

        int readSize = recv(sock, buffer, sizeof(buffer) - 1, 0);
        if (readSize > 0) {
            buffer[readSize] = '\0';
            cout << "Received from server: " << buffer << endl;
        }
        else {
            cout << "\nConnection closed by server or error occurred\n";
            break;
        }
    }

    closesocket(sock);
    WSACleanup();
    return 0;
}
